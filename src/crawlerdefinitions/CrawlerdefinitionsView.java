/*
 * CrawlerdefinitionsView.java
 */

package crawlerdefinitions;


import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import JSupport.Web.Crawler;
import JSupport.Web.HtmlMngr;
import java.sql.*;
import java.io.*;
import java.awt.List;
import java.util.Random;





/**
 * The application's main frame.
 */
public class CrawlerdefinitionsView extends FrameView {

    private Boolean  mbWait = true;
    public CrawlerdefinitionsView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
               // statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
              //  statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
      
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = CrawlerdefinitionsApp.getApplication().getMainFrame();
            aboutBox = new CrawlerdefinitionsAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        CrawlerdefinitionsApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(crawlerdefinitions.CrawlerdefinitionsApp.class).getContext().getResourceMap(CrawlerdefinitionsView.class);
        jList1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, resourceMap.getColor("jList1.border.matteColor"))); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setName("jList1"); // NOI18N
        jScrollPane1.setViewportView(jList1);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .add(jButton1)
                .add(150, 150, 150))
            .add(mainPanelLayout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(crawlerdefinitions.CrawlerdefinitionsApp.class).getContext().getActionMap(CrawlerdefinitionsView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents
    private void leer_fichero() throws InterruptedException, ClassNotFoundException, SQLException{
       
            String sCadena="";
            //Crawl_lemas("prueba");
           File  archivo= null;
           FileReader fr = null;
           List palabras = new List();
           int cont = 0;
           int indice= 0;
           Random l = new Random();
            Class.forName("com.mysql.jdbc.Driver");
            Connection con1 = null;
            con1 = DriverManager.getConnection("jdbc:mysql://corex.dyndns.org/linguisticresources", "root", "corex");
          // con1 = DriverManager.getConnection("jdbc:mysql://corex.dyndns.org/linguisticresources", "root", "corex");
           String cmd = "";
           Statement stmt = con1.createStatement();
           ResultSet rs = null;
            try {
                archivo = new File("D:/Corex_pruebas/es2.txt");
                fr = new FileReader(archivo);
                BufferedReader br = new BufferedReader(fr);
                while ((sCadena = br.readLine()) != null)
                    palabras.add(sCadena);
                while (palabras.getItemCount() > cont){
                    indice = l.nextInt(palabras.getItemCount());
                    cmd = "SELECT * FROM def_es WHERE Palabra = " + "'" + palabras.getItem(indice)+ "'";
                    rs = stmt.executeQuery(cmd);
                    if (!rs.next() ){
                        Crawl_lemas(palabras.getItem(indice));
                        cont++;
                    }
                }
                rs.close();
                con1.close();
            } catch (IOException ex) {
                Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        
        }
    

    private void Crawl_lemas(String palabra) throws InterruptedException, FileNotFoundException, IOException{

         Crawler craw = new Crawler();
        HtmlMngr ht = new HtmlMngr();
        File file = new File("D:\\Corex_pruebas\\ficheros_definiciones\\" + palabra + ".txt");
       palabra = palabra.replace("Á", "á").replace("É", "é").replace("Í", "í").replace("Ó", "ó").replace("Ú", "ú");
       // String HTML = craw.GetHtml("http://buscon.rae.es/draeI/SrvltGUIBusUsual?LEMA=" + palabra +"&origen=RAE&TIPO_BUS=3","");
       String HTML = craw.GetHtml("http://buscon.rae.es/draeI/SrvltGUIBusUsual?LEMA=" + palabra + "&origen=RAE&TIPO_BUS=3","");
        FileWriter fw = new FileWriter(file);
        fw.write(HTML);
        fw.close();

        int inds = HTML.indexOf("<B>");
        int inde = HTML.indexOf("</B>");
         palabra = HTML.substring(inds+3, inde);
       
        String lema = "";
        jList1.setName("lista");
        String[] data = new String[10000];
        data[0] = palabra;
        int cont = 0;
        String start = "<span class=\"eAbrv\">";
        String end = ".</span></span><span class=\"eAcep\">";
        String[] genero2 = HtmlMngr.GetHtmlTag(HTML, start, end);
        start = "<span class=\"eAbrvNoEdit\">";
        end = ".</span></span>";
        String[] genero1 = ht.GetHtmlTag(HTML, start, end);
        String[] genero = new String[(genero1.length + genero2.length)];
         for (int i = 0; i < genero1.length;i++){
                genero[i] =genero1[i];
        }
        int z = 0;
         for (int i = genero1.length; i < genero.length;i++){
                genero[i] =genero2[z];
                z++;
        }
        String st1 = "<B> ";
        String ed1 = "     </B>";
        String[] indices = ht.GetHtmlTag(HTML, st1, ed1);
        String[] contenido;
        start = "<span class=\"eAcep\"> ";
        end = ".</span></p>";
        contenido = ht.GetHtmlTag(HTML, start, end);
        String SQL = "";
        String pos;
        Connection con1 = null;
        try {
            //Conexion base de datos
            Class.forName("com.mysql.jdbc.Driver");
            //Establecemos conexión
        
           try {
                //con1 = DriverManager.getConnection("jdbc:mysql://corex.dyndns.org/linguisticresources", "root", "corex");
                con1 = DriverManager.getConnection("jdbc:mysql://corex.dyndns.org/linguisticresources", "root", "corex");
            } catch (SQLException ex) {
                Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
            }
           try {
                Statement stmt = con1.createStatement();
                 SQL = "INSERT INTO def_es (Palabra,Definicion,Genero,Posicion,Categoria) values ('" + data[0] + "'";

                    for (int j = 0 ; j < indices.length;j++){
                        if (indices[j].contains("<B> "))
                             indices[j] = indices[j].substring(indices[j].length()-3);
                     
                    }
                    int indice=0;
                    for (int j=0; j < genero.length;j++){
                        indice =genero[j].indexOf("\">");
                        genero[j] = genero[j].substring(indice+2, genero[j].length());
                    }
                    String SQL1="";
                    
                    for (int i = 0 ; i < contenido.length;i++){
                      /*  if (contenido[i].contains("<a href=\"SrvltObtenerHtml?origen=RAE&amp;LEMA=competición&amp;SUPIND=0&amp;CAREXT=10000&amp;NEDIC=No#0_2\"><span class=\"eReferencia\">")){
                             int st = contenido[i].indexOf("<b>");
                             int ed = contenido[i].indexOf(".</b>");
                             String p = contenido[i].substring(st+3,ed);
                             lema = contenido[i].replace("<a href=\"SrvltObtenerHtml?origen=RAE&amp;LEMA=competición&amp;SUPIND=0&amp;CAREXT=10000&amp;NEDIC=No#0_2\"><span class=\"eReferencia\"><b>competición.</b></span></a></span></p><p style=\"margin-left:2em; margin-bottom:-0.5em\"><a NAME=\"0_9\"></a><span class=\"eOrdenAcepLema\"><B> 9.     </B></span><span class=\"eAbrvNoEdit\"> <span class=\"eAbrvNoEdit\" title=\"nombre femenino\">f.</span></span><span class=\"eAcep\"> Muestra del grabado y de la fotografía", p);
                             cont++;
                             data[cont] = lema;
                        }
                        else{*/
                            if ((contenido[i].contains("<span class=\"eRefLema\">")) || (contenido[i].contains("<span class=\"eAbrv\" title=\"usado, usada, usados o usadas\">u.</span>")) || (contenido[i].contains("<span class=\"eAbrv\" title=\"Usado, usada, usados o usadas\">U.</span>"))){
                                 lema = contenido[i].replace("<span class=\"eRefLema\"><b>" + palabra + "</b></span>",palabra).replace("<span class=\"eAbrv\" title=\"usado, usada, usados o usadas\">u.</span>",palabra).replace("<span class=\"eAbrv\" title=\"Usado, usada, usados o usadas\">U.</span>",palabra);
                                 cont++;
                                 data[cont] = lema;
                            }
                            else{
                                   // lema = contenido[i];
                                    cont++;
                                    lema = contenido[i];
                                    data[cont] = contenido[i];
                               }

//                          }
                       
                        jList1.setListData(data);
                        genero[i] = genero[i].replace("f", "femenino").replace("m","masculino").replace("adj", "adjetivo");
                        if (genero[i].contains("masculino"))
                             SQL1 = SQL + ",'" + lema + "','"+ genero[i]+"','"+  indices[i]+ "','nombre')";
                        else{
                            if (genero[i].contains("femenino"))
                                 SQL1 = SQL + ",'" + lema + "','"+ genero[i]+"','"+  indices[i]+ "','nombre')";
                            else
                                SQL1 = SQL + ",'" + lema + "','','"+  indices[i]+ "','"+ genero[i]+"')";
                        }

                        stmt.executeUpdate(SQL1);
                        SQL1 = "";

                       
              }
               Random l = new Random();
               int time = l.nextInt(10000);
               Thread hilo = new Thread();
               hilo.start();
               hilo.sleep(time);

               con1.close();
        } catch (SQLException ex) {
               Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
        }


    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                leer_fichero();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(CrawlerdefinitionsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
